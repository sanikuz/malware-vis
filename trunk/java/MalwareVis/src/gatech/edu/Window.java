package gatech.edu;
import gatech.edu.menu.listener.*;
import gatech.edu.pcap.Pcap;
import gatech.edu.pcap.Pcaps;
import java.net.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.undo.UndoManager;


public class Window extends JFrame {
	JDesktopPane desktop;
	HelpListener listener;
	UndoManager undoredo;
	public TableFrame tbframe; 
	FileIOListener file_listener; 
	public CellFrame cframe; 
	float alpha; 
	
	public void setAlpha(float a){
		alpha =a; 
	}

	public Window(){
		super("MalwareVis");
		//setSize(800, 600);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		init();
	}
	private void init(){
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int inset = 100;
		setBounds(inset, inset,
                  screenSize.width  - inset*2,
                  screenSize.height - inset*2);
		desktop = new JDesktopPane();
		setContentPane(desktop);
		JMenuBar menubar = create_menubar();
		setJMenuBar(menubar);

		desktop.setBackground(Color.WHITE);
		desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);
		createTableFrame(); 
	}
	public void createTableFrame(Pcaps pcaps){
		TableFrame frame = new TableFrame(pcaps, this);
		tbframe = frame; 
		frame.setVisible(true);
		frame.setBackground(Color.LIGHT_GRAY);
		desktop.add(frame);
	}
	public void createTableFrame(){
		URL dataURL = Window.class.getResource("resource/data.txt");
	    if (dataURL != null) {
	    	Pcaps p = new Pcaps(dataURL);
	    	createTableFrame(p);
	    	} 
	    else {
	    	System.err.println("Couldn't find data folder");
	    	}
	}
	public void createCellFrame(Pcap pcap){
		if (cframe!=null) remove(cframe); 
		cframe = new CellFrame(pcap, alpha);
		cframe.setVisible(true);
        desktop.add(cframe);
	}
	protected void removeCellFrame(){
		desktop.remove(cframe); 
	}
	

	private JMenuBar create_menubar(){
		JMenuBar menubar = new JMenuBar();
		file_listener = new FileIOListener(this); 
		undoredo = new UndoManager();
		JMenu file = new JMenu("File");
		JMenuItem fopen = new JMenuItem("Open Pcaps");
		//fopen.addActionListener(file_listener);
		file.add(fopen);
		JMenuItem fopendir = new JMenuItem("Open Entities");
		//fopendir.addActionListener(file_listener);
		file.add(fopendir);
		JMenuItem fsave = new JMenuItem("Save Pcaps to Entities");
		fsave.addActionListener(file_listener);
		file.add(fsave);
		JMenuItem fsave2 = new JMenuItem("Save Pcaps");
		fsave2.addActionListener(file_listener);
		file.add(fsave2);
		JMenu help = new JMenu("Help");
		JMenuItem about = new JMenuItem("About"); 
		about.addActionListener(listener);
		help.add(about); 
		menubar.add(file);
		menubar.add(help);
		return menubar;
	}

	/*public void actionPerformed(ActionEvent e){
		if(e.getActionCommand().equals("Protocol View")){
			System.out.println("Protocol View"); 
		} else if(e.getActionCommand().equals("Cell View")){
			System.out.println("Create Cell View"); 
			createCellFrame(tbframe.selected); 
			//createMultipleCellFrame(tbframe.selected);
		} else if (e.getActionCommand().equals("Save")){
			System.out.println("Save"); 
		}
	}*/

	public static void main(String[]args){
		JFrame.setDefaultLookAndFeelDecorated(true);
		Window window = new Window();
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		window.setVisible(true);
	}


}
