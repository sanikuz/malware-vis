
package gatech.edu.util; 
import java.sql.*;

public class CountryLookup {
  private static final CountryLookup INSTANCE = new CountryLookup();
  private static final String DBpath = "data/geoip.db";    
  private static Connection conn; 
  private static PreparedStatement ps;
  public static CountryLookup getInstance(){return INSTANCE; }

  CountryLookup(){
	  try{
		  Class.forName("org.sqlite.JDBC");
		  conn = DriverManager.getConnection("jdbc:sqlite:" + DBpath);
		 // ps = conn.prepareStatement("select cc, start, value from ipv4 WHERE start LIKE ?");
	  }
	  catch (SQLException e) {
	      e.printStackTrace();
	  }
	  catch (ClassNotFoundException e) {
		  e.printStackTrace();
	  }
  }
  private static long ipToDecimal(String ip) {
    String[] quads = ip.split("\\.");
    long ret = 0;
    for (String s : quads) {
      ret = ret << 8;
      ret += Integer.parseInt(s);
    }

    return ret;
  }

  private static String firstQuad(String ip) {
    String[] quads = ip.split("\\.");
    return quads[0] + ".%";
  }

  private static String firstTwoQuads(String ip) {
    String[] quads = ip.split("\\.");

    StringBuilder sb = new StringBuilder();
    sb.append(quads[0]);
    sb.append(".");
    sb.append(quads[1]);
    sb.append(".%");

    return sb.toString();
  }

  /**
   * This class method returns the country code for a given IP address.
   *
   * @ip IP address you want the country for.
   */
  public String getCountryFromIP(String ip) {
    ip = ip.trim();
    try {
      ps = conn.prepareStatement("select cc, start, value from ipv4 WHERE start LIKE ?");
      ps.setString(1, firstTwoQuads(ip));
      ResultSet rs = ps.executeQuery();
      String cc = null;
      if (!rs.next()) {
        ps = conn.prepareStatement("select cc, start, value from ipv4 WHERE start LIKE ?");
        ps.setString(1, firstQuad(ip));
        rs = ps.executeQuery();
        rs.next();
      }
      do {
        if (ipToDecimal(rs.getString("start")) <= ipToDecimal(ip) &&
            ipToDecimal(ip) <= (ipToDecimal(rs.getString("start")) + rs.getLong("value"))) {
          return rs.getString("cc").toLowerCase();
            }
      } while (rs.next());
      rs.close();
      //conn.close();
    } catch (SQLException e) {
      System.err.println("No results. Is this a non-routable IP?");
      return new String("unknown");
    } 
    return new String("unknown");
  }

  public static void main(String[] args) throws SQLException, ClassNotFoundException {
    System.out.println(getInstance().getCountryFromIP("64.20.63.58")); //us
    System.out.println(getInstance().getCountryFromIP("77.120.109.3")); //ua
    System.out.println(getInstance().getCountryFromIP("192.168.11.1")); //non-routable
    System.out.println(getInstance().getCountryFromIP("74.125.157.99")); //us
  }
}