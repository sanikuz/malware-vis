package gatech.edu.util;

public class Mapping {
	//map input data to an output range specified by max and min
	float[] input; //assume input is sorted
	float min; 
	float max; 
	float alpha = 0.5f; 
	float[] output; 
	public Mapping(float[] data, float rmin, float rmax, float a){
		input = data; 
		min = rmin; 
		max = rmax; 
		alpha = a; 
		output = new float[data.length]; 
	}
	public void generateOutput(){
		map(0, input.length-1, min, max);
	}
	public float[] getOutput(){
		return output; 
	}
	public void map(int start, int end, float wmin, float wmax){
		//System.out.println("Start: "+start+", End: "+end+", min: "+wmin+", max:"+wmax); 
	    float wmean = (wmax+wmin)/2; 
	    if (end<=start) { 
	    	if (end == 0 ) output[0] = min; 
	    	else if (end == output.length-1) output[end] = max; 
	    	else output[end] = wmean; 
	      //System.out.println("data "+end+":"+input[end]+" map to: "+output[end]);
	      return;
	    }
	    float Mean = (input[start]+input[end])/2; 
	    float Median = input[(start+end)/2];
	    float Cut = alpha*Median+(1-alpha)*Mean; 
	    int CI = id(Cut); 
	   // System.out.println("mean: "+Mean+", median: "+Median+", cut id: "+CI); 
	    if (CI==start) {
	    	output[start]= wmin;
	    	//System.out.println("data "+start+":"+input[start]+" map to: "+wmin); 
	    	map(CI+1, end, wmean, wmax);
	    }
	    else if (CI == end){ 
	    	output[end] = wmax;
	    	//System.out.println("data "+end+":"+input[end]+" map to: "+wmax);
	    	map(start, CI-1, wmin, wmean); 
	    }
	    else if ( CI<end && CI>start){
	    	map(start, CI-1, wmin, wmean);
	    	map(CI, end, wmean, wmax); 
	    }
	    else System.out.println("map error!");
	}
	public int id(float value){
		for (int i = 0; i < input.length; i++) {
			if (value < input[i]) return i;
			}
		return input.length-1;
	}
}
